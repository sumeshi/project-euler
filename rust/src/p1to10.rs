pub mod p1to10 {
    /*
    Problem 1.
    ---
    If we list all the natural numbers below 10 that are multiples of 3 or 5,
    we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    */
    pub fn p1() {
        let num:i32 = (1..1000).filter(|&n| n%3 == 0 || n%5 == 0).sum();
        println!("{}", num);
    }

    /*
    Problem .
    ---
    Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million,
    find the sum of the even-valued terms.
    */
    extern crate seq;
    use seq::Fibonacci;

    pub fn p2() {
        fn fib(num:i32) -> i32 {
            Fibonacci::<u32>::new()
            .take_while(|&f| f < num)
            .filter(|&f| f.is_even())
            .sum()
        }

        fn p2() {
            println!("{}", fib(4000000));
        }
    }
}